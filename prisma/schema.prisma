// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  password         String
  email            String    @unique
  name             String
  programs         Program[]
  currentProgramId Int?
}

model Program {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           Int
  programName      String
  defaultVoteCount Int
  participants     Participant[]
  votingTickets    VotingTicket[]
}

model Participant {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  program   Program  @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId Int
  name      String
  summary   String   @db.MediumText
  image     String?
  votes     Vote[]
}

model VotingTicket {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  program        Program  @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId      Int
  voteKey        String   @unique
  remainingVotes Int
  votes          Vote[]
}

model Vote {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  votingTicket   VotingTicket @relation(fields: [votingTicketId], references: [id], onDelete: Cascade)
  votingTicketId Int
  participant    Participant  @relation(fields: [participantId], references: [id], onDelete: Cascade)
  participantId  Int
}
